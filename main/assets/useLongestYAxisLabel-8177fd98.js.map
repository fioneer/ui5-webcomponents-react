{"version":3,"file":"useLongestYAxisLabel-8177fd98.js","sources":["../../packages/charts/src/hooks/useLongestYAxisLabel.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils.js';\nimport { defaultMaxYAxisWidth } from '../internal/defaults.js';\nimport { getTextWidth } from '../internal/Utils.js';\n\nexport const useLongestYAxisLabel = (dataset: unknown[], elements): [number, object] =>\n  useMemo(() => {\n    let labelLength = 0;\n    const primaryElement = elements[0];\n\n    if (dataset instanceof Array && primaryElement) {\n      const resolveAllMeasureLabels = (item): string[] => {\n        return elements.map((elementConfig) =>\n          primaryElement.formatter(getValueByDataKey(item, elementConfig.accessor, ''))\n        );\n      };\n      labelLength = Math.max(...dataset.map(resolveAllMeasureLabels).flat().map(getTextWidth));\n      labelLength += 8;\n    }\n\n    labelLength = Math.min(labelLength, defaultMaxYAxisWidth);\n\n    return [labelLength, { marginLeft: labelLength, maxWidth: `calc(100% - ${labelLength + 10}px)` }];\n  }, [dataset, elements]);\n"],"names":["useLongestYAxisLabel","dataset","elements","useMemo","labelLength","primaryElement","resolveAllMeasureLabels","item","elementConfig","getValueByDataKey","getTextWidth","defaultMaxYAxisWidth"],"mappings":"gJAKO,MAAMA,EAAuB,CAACC,EAAoBC,IACvDC,UAAQ,IAAM,CACZ,IAAIC,EAAc,EACZ,MAAAC,EAAiBH,EAAS,CAAC,EAE7B,GAAAD,aAAmB,OAASI,EAAgB,CACxC,MAAAC,EAA2BC,GACxBL,EAAS,IAAKM,GACnBH,EAAe,UAAUI,EAAkBF,EAAMC,EAAc,SAAU,EAAE,CAAC,CAAA,EAGlEJ,EAAA,KAAK,IAAI,GAAGH,EAAQ,IAAIK,CAAuB,EAAE,KAAK,EAAE,IAAII,CAAY,CAAC,EACxEN,GAAA,CACjB,CAEc,OAAAA,EAAA,KAAK,IAAIA,EAAaO,CAAoB,EAEjD,CAACP,EAAa,CAAE,WAAYA,EAAa,SAAU,eAAeA,EAAc,EAAE,KAAO,CAAA,CAClG,EAAG,CAACH,EAASC,CAAQ,CAAC"}