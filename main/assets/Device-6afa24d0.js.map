{"version":3,"file":"Device-6afa24d0.js","sources":["../../node_modules/@ui5/webcomponents-base/dist/Device.js"],"sourcesContent":["const isSSR = typeof document === \"undefined\";\nconst internals = {\n    get userAgent() {\n        if (isSSR) {\n            return \"\";\n        }\n        return navigator.userAgent;\n    },\n    get touch() {\n        if (isSSR) {\n            return false;\n        }\n        return \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n    },\n    get ie() {\n        if (isSSR) {\n            return false;\n        }\n        return /(msie|trident)/i.test(internals.userAgent);\n    },\n    get chrome() {\n        if (isSSR) {\n            return false;\n        }\n        return !internals.ie && /(Chrome|CriOS)/.test(internals.userAgent);\n    },\n    get firefox() {\n        if (isSSR) {\n            return false;\n        }\n        return /Firefox/.test(internals.userAgent);\n    },\n    get safari() {\n        if (isSSR) {\n            return false;\n        }\n        return !internals.ie && !internals.chrome && /(Version|PhantomJS)\\/(\\d+\\.\\d+).*Safari/.test(internals.userAgent);\n    },\n    get webkit() {\n        if (isSSR) {\n            return false;\n        }\n        return !internals.ie && /webkit/.test(internals.userAgent);\n    },\n    get windows() {\n        if (isSSR) {\n            return false;\n        }\n        return navigator.platform.indexOf(\"Win\") !== -1;\n    },\n    get iOS() {\n        if (isSSR) {\n            return false;\n        }\n        return !!(navigator.platform.match(/iPhone|iPad|iPod/)) || !!(internals.userAgent.match(/Mac/) && \"ontouchend\" in document);\n    },\n    get android() {\n        if (isSSR) {\n            return false;\n        }\n        return !internals.windows && /Android/.test(internals.userAgent);\n    },\n    get androidPhone() {\n        if (isSSR) {\n            return false;\n        }\n        return internals.android && /(?=android)(?=.*mobile)/i.test(internals.userAgent);\n    },\n    get ipad() {\n        if (isSSR) {\n            return false;\n        }\n        // With iOS 13 the string 'iPad' was removed from the user agent string through a browser setting, which is applied on all sites by default:\n        // \"Request Desktop Website -> All websites\" (for more infos see: https://forums.developer.apple.com/thread/119186).\n        // Therefore the OS is detected as MACINTOSH instead of iOS and the device is a tablet if the Device.support.touch is true.\n        return /ipad/i.test(internals.userAgent) || (/Macintosh/i.test(internals.userAgent) && \"ontouchend\" in document);\n    },\n};\nlet windowsVersion;\nlet webkitVersion;\nlet tablet;\nconst isWindows8OrAbove = () => {\n    if (isSSR) {\n        return false;\n    }\n    if (!internals.windows) {\n        return false;\n    }\n    if (windowsVersion === undefined) {\n        const matches = internals.userAgent.match(/Windows NT (\\d+).(\\d)/);\n        windowsVersion = matches ? parseFloat(matches[1]) : 0;\n    }\n    return windowsVersion >= 8;\n};\nconst isWebkit537OrAbove = () => {\n    if (isSSR) {\n        return false;\n    }\n    if (!internals.webkit) {\n        return false;\n    }\n    if (webkitVersion === undefined) {\n        const matches = internals.userAgent.match(/(webkit)[ /]([\\w.]+)/);\n        webkitVersion = matches ? parseFloat(matches[1]) : 0;\n    }\n    return webkitVersion >= 537.10;\n};\nconst detectTablet = () => {\n    if (isSSR) {\n        return false;\n    }\n    if (tablet !== undefined) {\n        return;\n    }\n    if (internals.ipad) {\n        tablet = true;\n        return;\n    }\n    if (internals.touch) {\n        if (isWindows8OrAbove()) {\n            tablet = true;\n            return;\n        }\n        if (internals.chrome && internals.android) {\n            tablet = !/Mobile Safari\\/[.0-9]+/.test(internals.userAgent);\n            return;\n        }\n        let densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices\n        if (internals.android && isWebkit537OrAbove()) {\n            densityFactor = 1;\n        }\n        tablet = (Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600);\n        return;\n    }\n    tablet = (internals.ie && internals.userAgent.indexOf(\"Touch\") !== -1) || (internals.android && !internals.androidPhone);\n};\nconst supportsTouch = () => internals.touch;\nconst isIE = () => internals.ie;\nconst isSafari = () => internals.safari;\nconst isChrome = () => internals.chrome;\nconst isFirefox = () => internals.firefox;\nconst isTablet = () => {\n    detectTablet();\n    return (internals.touch || isWindows8OrAbove()) && tablet;\n};\nconst isPhone = () => {\n    detectTablet();\n    return internals.touch && !tablet;\n};\nconst isDesktop = () => {\n    if (isSSR) {\n        return false;\n    }\n    return (!isTablet() && !isPhone()) || isWindows8OrAbove();\n};\nconst isCombi = () => {\n    return isTablet() && isDesktop();\n};\nconst isIOS = () => {\n    return internals.iOS;\n};\nconst isAndroid = () => {\n    return internals.android || internals.androidPhone;\n};\nexport { supportsTouch, isIE, isSafari, isChrome, isFirefox, isPhone, isTablet, isDesktop, isCombi, isIOS, isAndroid, };\n//# sourceMappingURL=Device.js.map"],"names":["isSSR","internals","windowsVersion","webkitVersion","tablet","isWindows8OrAbove","matches","isWebkit537OrAbove","detectTablet","densityFactor","supportsTouch","isSafari","isChrome","isFirefox","isTablet","isPhone","isDesktop","isCombi","isIOS","isAndroid"],"mappings":"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","x_google_ignoreList":[0]}